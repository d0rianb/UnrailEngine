{"version":3,"file":"unrail-engine.umd.js","sources":["../node_modules/@dorianb/random-js/lib/main.js","../src/core/math.ts","../src/events/event.ts","../src/events/eventSystem.ts","../node_modules/stats.js/build/stats.min.js","../src/core/geometry.ts","../src/render/renderer.ts","../src/core/utils.ts","../src/render/offscreen-renderer/workerMessage.ts","../src/render/offscreen-renderer/renderCall.ts","../src/render/offscreen-renderer/index.ts","../src/render/texture.ts","../src/render/interface.ts","../src/core/stats.ts","../src/core/animationFrame.ts","../src/core/game.ts","../src/core/objects.ts","../src/events/cooldown.ts","../src/core/particles.ts","../src/core/grid.ts","../src/config/index.ts","../src/core/env.ts"],"sourcesContent":["// TODO: Add examples in docs\n\n\n/**\n * @class Random\n */\nclass Random {\n\n    /**\n     * @static random - Random seed\n     *\n     * @return {number}  Random number between 0 and 1\n     */\n    static random() {\n        return Math.random()\n    }\n\n\n    /**\n     * @static randint - Random integer in [a, b]\n     *\n     * @param  {number} a The lower band of the interval\n     * @param  {number} b The upper band of the interval\n     * @return {number}      A random integer in the interval [a, b]\n     */\n    static randint(a, b) {\n        return Math.floor(a + Math.random() * (b - a))\n    }\n\n\n    /**\n     * @static choice - A random element in an array\n     *\n     * @param  {Array} array An array of elements\n     * @return {any}         The element randomly choosen\n     */\n    static choice(array) {\n        return array[~~(Random.random() * array.length)]\n    }\n\n\n    /**\n     * @static bool - Random boolean\n     *\n     * @return {boolean}  A random boolean\n     */\n    static bool() {\n        return Random.random() > 0.5\n    }\n\n    /**\n     * @static sing - Random sign\n     *\n     * @return {number}  Return +1 or -1 with a probability of 0.5\n     */\n    static sign() {\n        return Random.choice([-1, 1])\n    }\n\n\n    /**\n     * @static percent - Random percentage below a certain probablitity\n     *\n     * @param  {number} percentage    A percentage between 0 and 100\n     * @return {boolean}\n     */\n    static percent(percentage) {\n        return Random.random() < percentage / 100\n    }\n}\n\nmodule.exports = Random","import Random from '@dorianb/random-js'\n\nexport { Random }\n\nexport class Vector2 {\n    public x: number\n    public y: number\n\n    constructor(x: number, y: number) {\n        this.x = x\n        this.y = y\n    }\n\n    public add(vec: Vector2): Vector2 {\n        return new Vector2(this.x + vec.x, this.y + vec.y)\n    }\n\n    public clone(): Vector2 {\n        return new Vector2(this.x, this.y)\n    }\n\n    public dist(vec: Vector2): number {\n        return Math.sqrt((this.x - vec.x) ** 2 + (this.y - vec.y) ** 2)\n    }\n}\n\nexport type Point = Vector2\nexport const Point = Vector2\n\nexport const V_NULL = new Vector2(0, 0)\nexport const V_UNIT = new Vector2(1, 1)\n\nexport function clamp(min: number, x: number, max: number): number {\n    return Math.max(min, Math.min(x, max))\n}\n\nexport function inRange(x: number, min: number, max: number): boolean {\n    return clamp(min, x, max) === x\n}\n","import { EventSystem } from './eventSystem'\n\nenum EventType {\n    KeyboardPressed, KeyboardDown, Mouse, Window, Custom\n}\n\nclass Event {\n    name: string\n    callback: Function // TODO: properly define callback type\n    listeners: Array<Function>\n    type: EventType\n\n    constructor(name: string, callback: Function, type: EventType = EventType.Custom) {\n        this.name = name\n        this.callback = callback\n        this.type = type\n        this.listeners = [this.callback]\n    }\n\n    static emit(name: string, params?: any): void {\n        const event: Event = ES.getCustomEvent(name)\n        if (event) {\n            event.listeners.forEach(callback => callback(params))\n        }\n    }\n\n    static on(name: string, callback: Function): void {\n        const existingEvent: Event = ES.getCustomEvent(name)\n        if (existingEvent) {\n            existingEvent.listeners.push(callback)\n        } else {\n            const event: Event = new Event(name, callback, EventType.Custom)\n            ES.addEvent(event)\n        }\n    }\n\n    static onKeyDown(name: string, callback: Function): void {\n        ES.addEvent(new Event(name, callback, EventType.KeyboardDown))\n    }\n\n    static onKeyPressed(name: string, callback: Function): void {\n        ES.addEvent(new Event(name, callback, EventType.KeyboardPressed))\n    }\n\n    static onMouseClick(callback: Function) {\n        ES.addEvent(new Event('click', callback, EventType.Mouse))\n    }\n}\n\nconst ES: EventSystem = new EventSystem()\n\nexport default Event\nexport { Event, EventType, ES }","import { Event, EventType } from './event'\n\ntype Callback = (this: Window, ev: any) => any\n\n// TODO: move the keyboardEvents in its own file\nclass EventSystem {\n    windowEvents: Array<Event>\n    keyboardDownEvents: Array<Event>\n    customEvents: Array<Event>\n    keyboardPressedEvents: Array<Event>\n    currentKeyEvents: Array<KeyboardEvent>\n\n    constructor() {\n        this.windowEvents = []\n        this.keyboardDownEvents = []\n        this.keyboardPressedEvents = []\n        this.customEvents = []\n\n        this.currentKeyEvents = []\n    }\n\n    // Need the window variable to be defined\n    init(): void {\n        window.addEventListener('keydown', e => {\n            if (!this.currentKeyEvents.find(event => event.code === e.code)) {\n                this.currentKeyEvents.push(e)\n            }\n            this.keyboardPressedEvents.forEach(event => {\n                if (e.code === event.name) {\n                    event.callback(e)\n                }\n            })\n        })\n        window.addEventListener('keyup', e => {\n            if (!this.currentKeyEvents.length) return\n            this.currentKeyEvents = this.currentKeyEvents.filter(event => event.code !== e.code)\n        })\n    }\n\n    addEvent(e: Event): void {\n        switch (e.type) {\n            case EventType.KeyboardDown:\n                this.keyboardDownEvents.push(e)\n            case EventType.KeyboardPressed:\n                this.keyboardPressedEvents.push(e)\n            case EventType.Mouse:\n                break\n            case EventType.Window:\n                this.windowEvents.push(e)\n                this.bindEvents()\n            case EventType.Custom:\n                this.customEvents.push(e)\n        }\n    }\n\n    getCustomEvent(name: string): Event {\n        return this.customEvents.find(e => e.name === name)\n    }\n\n    bindEvents(): void {\n        // TODO: check if event exist on window\n        this.windowEvents.forEach(event => window.addEventListener(event.name as any, event.callback as Callback))\n    }\n\n    tick(): void {\n        if (!this.currentKeyEvents.length) return\n        this.keyboardDownEvents.forEach(keyEvent => {\n            this.currentKeyEvents.forEach(e => {\n                if (e.code === keyEvent.name) {\n                    keyEvent.callback(e)\n                }\n            })\n        })\n    }\n}\nexport { EventSystem }\nexport default EventSystem\n\n","// stats.js - http://github.com/mrdoob/stats.js\n(function(f,e){\"object\"===typeof exports&&\"undefined\"!==typeof module?module.exports=e():\"function\"===typeof define&&define.amd?define(e):f.Stats=e()})(this,function(){var f=function(){function e(a){c.appendChild(a.dom);return a}function u(a){for(var d=0;d<c.children.length;d++)c.children[d].style.display=d===a?\"block\":\"none\";l=a}var l=0,c=document.createElement(\"div\");c.style.cssText=\"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";c.addEventListener(\"click\",function(a){a.preventDefault();\nu(++l%c.children.length)},!1);var k=(performance||Date).now(),g=k,a=0,r=e(new f.Panel(\"FPS\",\"#0ff\",\"#002\")),h=e(new f.Panel(\"MS\",\"#0f0\",\"#020\"));if(self.performance&&self.performance.memory)var t=e(new f.Panel(\"MB\",\"#f08\",\"#201\"));u(0);return{REVISION:16,dom:c,addPanel:e,showPanel:u,begin:function(){k=(performance||Date).now()},end:function(){a++;var c=(performance||Date).now();h.update(c-k,200);if(c>g+1E3&&(r.update(1E3*a/(c-g),100),g=c,a=0,t)){var d=performance.memory;t.update(d.usedJSHeapSize/\n1048576,d.jsHeapSizeLimit/1048576)}return c},update:function(){k=this.end()},domElement:c,setMode:u}};f.Panel=function(e,f,l){var c=Infinity,k=0,g=Math.round,a=g(window.devicePixelRatio||1),r=80*a,h=48*a,t=3*a,v=2*a,d=3*a,m=15*a,n=74*a,p=30*a,q=document.createElement(\"canvas\");q.width=r;q.height=h;q.style.cssText=\"width:80px;height:48px\";var b=q.getContext(\"2d\");b.font=\"bold \"+9*a+\"px Helvetica,Arial,sans-serif\";b.textBaseline=\"top\";b.fillStyle=l;b.fillRect(0,0,r,h);b.fillStyle=f;b.fillText(e,t,v);\nb.fillRect(d,m,n,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d,m,n,p);return{dom:q,update:function(h,w){c=Math.min(c,h);k=Math.max(k,h);b.fillStyle=l;b.globalAlpha=1;b.fillRect(0,0,r,m);b.fillStyle=f;b.fillText(g(h)+\" \"+e+\" (\"+g(c)+\"-\"+g(k)+\")\",t,v);b.drawImage(q,d+a,m,n-a,p,d,m,n-a,p);b.fillRect(d+n-a,m,a,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d+n-a,m,a,g((1-h/w)*p))}}};return f});\n","interface SizeObject {\n    width?: number\n    height?: number\n}\n\nfunction getWindowDimensions(): SizeObject {\n    return { width: window.innerWidth, height: window.innerHeight }\n}\n\nfunction createCanvas(w: number, h: number, ratio?: number, preventRightClick?: boolean): HTMLCanvasElement {\n    const pixelRatio: number = ratio || window.devicePixelRatio || 1\n    const canvas: HTMLCanvasElement = document.createElement('canvas')\n    canvas.width = w * pixelRatio\n    canvas.height = h * pixelRatio\n    canvas.style.width = w + 'px'\n    canvas.style.height = h + 'px'\n    if (pixelRatio != 1) {\n        canvas.getContext('2d').setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0)\n    }\n    if (!!preventRightClick) {\n        canvas.oncontextmenu = e => e.preventDefault()\n    }\n    return canvas\n}\n\nfunction insertCanvas(canvas: HTMLCanvasElement, el: string): void {\n    window.onload = () => {\n        let element = document.querySelector(el)\n        if (!element) element = document.createElement(el)\n        element.appendChild(canvas)\n        document.querySelector('body').appendChild(element)\n    }\n}\n\nexport { getWindowDimensions, createCanvas, insertCanvas }\n","import { createCanvas } from '..'\nimport { insertCanvas } from '../core/geometry'\nimport { Point } from '../core/math'\nimport { Texture } from './texture'\nimport { isWorker } from '../core/utils'\n\ntype CanvasRenderContext = CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D\n\ninterface StyleObject {\n    strokeStyle?: string,\n    lineWidth?: number,\n    lineJoin?: CanvasLineJoin,\n    fillStyle?: string,\n    globalAlpha?: number\n    globalCompositeOperation?: string\n}\n\nconst defaultStyleObject: StyleObject = {\n    strokeStyle: 'black',\n    lineWidth: 2,\n    lineJoin: 'round',\n    fillStyle: 'transparent',\n    globalAlpha: 1,\n    globalCompositeOperation: 'add'\n}\n\nlet precision: number =  isWorker() ? 4 : 2 * (window.devicePixelRatio || 1)\n\n// Move to math file ?\nfunction round(num: number): number {\n    return ~~(num * precision) / precision\n}\n\nlet ctx: CanvasRenderContext = null\n\nclass Renderer {\n\n    // Create a canvas and insert it to <main>\n    static create(width: number, height: number): HTMLCanvasElement {\n        const canvas: HTMLCanvasElement = createCanvas(width, height)\n        insertCanvas(canvas, 'main')\n        Renderer.setContext(canvas.getContext('2d'))\n        return canvas\n    }\n\n    static setContext(context: CanvasRenderContext): void {\n        ctx = context\n    }\n\n    static getContext(): CanvasRenderContext {\n        return ctx\n    }\n\n    static style(obj?: StyleObject): void {\n        if (!ctx) throw new Error('Context has not been initialize. Please use Renderer.setContext')\n        const styleObject = { ...defaultStyleObject, ...obj }\n        for (let prop in styleObject) {\n            if (ctx[prop] !== styleObject[prop]) {\n                ctx[prop] = styleObject[prop]\n            }\n        }\n    }\n\n    static clear(color?: string): void {\n        if (color) {\n            Renderer.style({ fillStyle: color })\n            ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n        } else {\n            ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n        }\n    }\n\n    static line(x1: number, y1: number, x2: number, y2: number, obj?: StyleObject): void {\n        Renderer.style(obj)\n        ctx.beginPath()\n        ctx.moveTo(round(x1), round(y1))\n        ctx.lineTo(round(x2), round(y2))\n        ctx.stroke()\n    }\n\n    static rect(x: number, y: number, width: number, height: number, obj?: StyleObject, noStyle?: boolean): void {\n        if (!noStyle) Renderer.style(obj)\n        const [r_x, r_y, r_w, r_h] = [round(x), round(y), round(width), round(height)]\n        ctx.fillRect(r_x, r_y, r_w, r_h)\n        ctx.strokeRect(r_x, r_y, r_w, r_h)\n    }\n\n    static poly(points: Array<Point>, obj?: StyleObject): void {\n        if (!points.length) return\n        Renderer.style(obj)\n        ctx.beginPath()\n        ctx.moveTo(round(points[0].x), round(points[0].y))\n        for (let i = 1; i < points.length; i++) {\n            ctx.lineTo(round(points[i].x), round(points[i].y))\n        }\n        ctx.stroke()\n    }\n\n    static circle(x: number, y: number, radius: number, obj?: StyleObject): void {\n        Renderer.style(obj)\n        ctx.beginPath()\n        ctx.arc(round(x), round(y), radius, 0, 2 * Math.PI)\n        ctx.stroke()\n    }\n\n    static point(x: number, y: number, obj?: StyleObject): void {\n        Renderer.circle(x, y, 5, obj)\n    }\n\n    static rectSprite(x: number, y: number, width: number, height: number, texture: Texture): void {\n        Renderer.style({})\n        ctx.save()\n        ctx.translate(round(x + width / 2), round(y + height / 2))\n        ctx.scale(texture.scale.x, texture.scale.y)\n        ctx.rotate(texture.rotation)\n        ctx.drawImage(\n            texture.image,\n            round(width * texture.offset.x - width / 2),\n            round(height * texture.offset.y - height / 2),\n            round(width),\n            round(height)\n        )\n        ctx.restore()\n    }\n\n    static circleSprite(x: number, y: number, radius: number, texture: Texture): void {\n        ctx.save()\n        ctx.beginPath()\n        ctx.arc(round(x), round(y), radius, 0, 2 * Math.PI)\n        ctx.clip()\n        Renderer.rectSprite(x - radius, y - radius, 2 * radius, 2 * radius, texture)\n        ctx.restore()\n    }\n\n    static tint(color: string, x: number, y: number, width: number, height: number): void {\n        Renderer.rect(x, y, width, height, {\n            fillStyle: color,\n            globalCompositeOperation: 'multiply',\n            globalAlpha: .25\n        })\n    }\n}\n\nexport { Renderer, StyleObject }\n","export function blink(el: string, className: string, interval: number = 300): void {\n    document.querySelector(el).classList.toggle(className)\n    setTimeout(() => document.querySelector(el).classList.toggle(className), interval)\n}\n\nexport function isWorker(): boolean {\n    // return self instanceof DedicatedWorkerGlobalScope\n    return (self.document == undefined && self.window == undefined)\n}","export class WorkerMessage {\n    title: string\n    content: any\n\n    constructor(title: string, content: object) {\n        this.title = title\n        this.content = content\n    }\n}","export class RenderCall {\n    public methodName: string\n    public args: object\n\n    constructor(name, args) {\n        this.methodName = name\n        this.args = args\n    }\n}","import { Texture } from '..'\nimport { Game } from '@/core/game'\nimport { createCanvas, insertCanvas } from '@/core/geometry'\nimport { Point } from '@/core/math'\nimport { StyleObject } from '../renderer'\nimport { WorkerMessage } from './workerMessage'\nimport { RenderCall } from './renderCall'\n\n// ISSUE : relative path not resolved when execute from node_modules\nconst WORKER_PATH: string = './src/render/offscreen-renderer/rendererWorker.ts'\n\nlet offscreenCanvas: OffscreenCanvas = null\nlet worker: Worker = null\nlet canvas: HTMLCanvasElement = null\nlet workerIsInitialized = false\nlet renderStack: Array<RenderCall> = []\n\nconst textureAlias: Map<number, Texture> = new Map()\n\n\nclass OffscreenRenderer {\n\n    static get worker() { return worker }\n\n    static get offscreenCanvas() { return offscreenCanvas }\n\n    static get workerIsInitialized() { return workerIsInitialized }\n\n    static get renderStack() { return renderStack }\n\n    static get workerUrl() { return new URL(WORKER_PATH, window.location.origin) }\n\n    // Create a canvas and insert it to <main>\n    static create(width: number, height: number): HTMLCanvasElement {\n        canvas = createCanvas(width, height, 1)\n        OffscreenRenderer.initRenderWorker(canvas, width, height)\n        insertCanvas(canvas, 'main')\n        return canvas\n    }\n\n    static initRenderWorker(canvas, width: number, height: number): void {\n        if (Game.rendererType !== 'offscreen') {\n            Game.setRendererType('offscreen')\n        }\n        let { clientWidth, clientHeight } = canvas\n        const workerUrl = new URL(WORKER_PATH, window.location.origin)\n        worker = new Worker(workerUrl, { type: 'module' })\n        offscreenCanvas = canvas.transferControlToOffscreen()\n        this.sendMessageToWorker('initCanvas', {\n            width: width || clientWidth,\n            height: height || clientHeight,\n            canvas: offscreenCanvas,\n            dpr: window.devicePixelRatio || 1\n        }, [offscreenCanvas])\n\n        worker.onmessage = ({ data: { title, data } }) => {\n            switch (title) {\n                case 'log':\n                    console.log('message from the renderer worker : ', data)\n                    break\n                case 'initialized':\n                    workerIsInitialized = true\n                    break\n            }\n        }\n    }\n\n    static addRenderCall(name: string, args?: object) {\n        renderStack.push(new RenderCall(name, args || {}))\n    }\n\n    static sendMessageToWorker(title: string, data?: any, transfer?: Transferable[]): void {\n        return worker.postMessage(new WorkerMessage(title, data), transfer || [])\n    }\n\n    static style(obj?: StyleObject): void { this.addRenderCall('style', { obj }) }\n\n    static clear(color?: string): void { this.addRenderCall('clear', { color }) }\n\n    static line(x1: number, y1: number, x2: number, y2: number, obj?: StyleObject): void { this.addRenderCall('line', { x1, y1, x2, y2, obj }) }\n\n    static rect(x: number, y: number, width: number, height: number, obj?: StyleObject, noStyle?: boolean): void { this.addRenderCall('rect', { x, y, width, height, obj, noStyle }) }\n\n    static poly(points: Array<Point>, obj?: StyleObject): void { this.addRenderCall('poly', { points, obj }) }\n\n    static circle(x: number, y: number, radius: number, obj?: StyleObject): void { this.addRenderCall('circle', { x, y, radius, obj }) }\n\n    static point(x: number, y: number, obj?: StyleObject): void { this.addRenderCall('point', { x, y, obj }) }\n\n    // <img> object is not serializable\n    static rectSprite(x: number, y: number, width: number, height: number, texture: Texture): void {\n        if (texture.id in textureAlias) {\n            this.addRenderCall('rectSprite', { x, y, width, height, textureId: texture.id })\n        } else {\n            texture.convertToBitmap().then(adaptedTexture => {\n                textureAlias[texture.id] = adaptedTexture\n                this.sendMessageToWorker('newTexture', { id: texture.id, texture: adaptedTexture })\n            })\n        }\n    }\n\n    static async circleSprite(x: number, y: number, radius: number, texture: Texture): Promise<void> {\n        if (texture.id in textureAlias) {\n            this.addRenderCall('circleSprite', { x, y, radius, textureId: texture.id })\n        } else {\n            const adaptedTexture: Texture = await texture.convertToBitmap()\n            textureAlias[texture.id] = adaptedTexture\n            this.sendMessageToWorker('newTexture', { id: texture.id, texture: adaptedTexture })\n        }\n    }\n\n    static tint(color: string, x: number, y: number, width: number, height: number): void { this.addRenderCall('circle', { color, x, y, width, height }) }\n\n    static beginFrame(): void {\n        renderStack = []\n        this.addRenderCall('clear')\n    }\n\n    static endFrame(): void {\n        if (!workerIsInitialized) return\n        this.sendMessageToWorker('render', { renderStack })\n        renderStack = []\n    }\n}\n\n\nexport { OffscreenRenderer }\n\n","import { Vector2, V_UNIT, V_NULL } from '../core/math'\nimport { isWorker } from '../core/utils'\n\ninterface TextureOptions {\n    rotation?: number, // radians\n    offset?: Vector2,\n    scale?: Vector2\n}\n\nlet textureId: number = 0\n\nclass Texture {\n    id: number\n    image: HTMLImageElement\n    rotation: number\n    offset: Vector2\n    size: Vector2\n    scale: Vector2\n    options: TextureOptions\n\n    constructor(source: string, options?: TextureOptions) {\n        if (!source) throw new Error('A source path to the resource must be provided')\n        this.id = textureId++\n        this.image = new Image()\n        this.image.src = source\n        this.size = new Vector2(this.image.width, this.image.height)\n        this.options = options || {}\n        this.rotation = this.options.rotation || 0\n        this.offset = this.options.offset || V_NULL // relative to the size\n        this.scale = this.options.scale || V_UNIT\n    }\n\n    // Create Bitmap image for worker \n    async convertToBitmap(): Promise<Texture> | null {\n        if (!this.image.width || !this.image.height) return\n        const image: ImageBitmap = await createImageBitmap(this.image)\n        return { ...this, image } as Texture\n    }\n}\n\nclass Sprite extends Texture {\n    constructor(source: string, options?: TextureOptions) {\n        super(source, options)\n    }\n}\n\nexport { Sprite, Texture }\n","import { Game } from '../core/game'\n\ninterface InterfaceItem {\n    callback(game?: Game): string\n    position?: ItemPosition\n    options?: CSSOptions,\n    onClick?: InterfaceClickCallback\n}\n\nlet items: Array<InterfaceItem> = []\nlet updateInterval: number = 4 // Each 4 frames\n\n// Types needed for the Interface Class\ntype CSSOptions = Object\ntype InterfaceTextFunction = () => string\ntype InterfaceClickCallback = (e: MouseEvent) => any\n\nconst itemPositions = ['top-left', 'top-right', 'bottom-left', 'bottom-right', 'custom'] as const\ntype ItemPosition = typeof itemPositions[number] // Type itemPositions\n\nclass Interface {\n\n    static addItem(callback: InterfaceTextFunction, position?: ItemPosition, options?: CSSOptions): void {\n        Interface.internalAddItem(callback, position, options)\n    }\n\n    static addButton(callback: InterfaceTextFunction, position?: ItemPosition, options?: CSSOptions, onClick?: InterfaceClickCallback): void {\n        Interface.internalAddItem(callback, position, options, onClick)\n    }\n\n    private static internalAddItem(callback: InterfaceTextFunction, position?: ItemPosition, options?: CSSOptions, onClick?: InterfaceClickCallback): void {\n        const item: InterfaceItem = { callback, position, options, onClick } as InterfaceItem\n        items.push(item)\n        const index: number = items.length\n        window.addEventListener('load', () => Interface.addToDom(item, index))\n    }\n\n    static init(): void {\n        const container: HTMLDivElement = document.createElement('div')\n        container.classList.add('ue-interface', 'ue-container')\n        for (let pos of itemPositions) {\n            const positionedContainer: HTMLDivElement = document.createElement('div')\n            positionedContainer.classList.add(pos)\n            container.appendChild(positionedContainer)\n        }\n        document.body.appendChild(container)\n    }\n\n    static addToDom(item: InterfaceItem, index: number): void {\n        const value: string = item.callback()\n        const element: HTMLSpanElement = document.createElement('span')\n        element.classList.add('ue-interface-items')\n        element.id = `item-${index}`\n        element.innerText = value\n        Object.entries(item.options || {}).forEach(([key, value]) => element.style[key] = value)\n        if (item.position) document.querySelector(`.ue-container > .${item.position}`)?.appendChild(element)\n        else document.querySelector(`.ue-container > .custom`)?.appendChild(element)\n        if (!!item.onClick) {\n            element.addEventListener('click', e => item.onClick(e))\n            element.classList.add('ue-interface-button')\n        }\n    }\n\n    static update(): void {\n        items.forEach((item, i) => {\n            const value: string = item.callback()\n            const element: HTMLSpanElement = document.querySelector(`.ue-interface #item-${i + 1}`)\n            if (element && element.innerText !== value) {\n                element.innerText = value\n            }\n        })\n    }\n\n    // height is a css property\n    static statsShift(height: number): void {\n        const TLContainer: HTMLElement = document.querySelector('.top-left')\n        if (TLContainer) {\n            TLContainer.style.top = `${height}px`\n        }\n    }\n\n    static setUpdateInterval(rate: number): void {\n        updateInterval = rate\n    }\n\n    static get updateInterval(): number {\n        return updateInterval\n    }\n\n}\n\nexport { Interface }\n","import Stats from 'stats.js'\nimport { Interface } from '../render'\n\n\nfunction showStats(): Stats {\n    const stats: Stats = new Stats()\n    const el: HTMLDivElement = document.createElement('div')\n    el.classList.toggle('stats')\n    stats.showPanel(0)\n    el.appendChild(stats.dom)\n    document.body.appendChild(el)\n    Interface.statsShift(48)\n    return stats\n}\n\n\nexport { showStats, Stats }\n","type AnimationFunction = (number) => any\n\nclass AnimationFrame {\n    requestId: number\n    fps: number\n    animate: AnimationFunction\n\n    constructor(animate: AnimationFunction, fps: number = 60) {\n        this.requestId = 0\n        this.animate = animate\n        this.fps = fps\n        if (!window) throw new Error('No window context')\n    }\n\n    start() {\n        let then: number = performance.now()\n        const interval: number = 1000 / this.fps\n        const tolerance: number = 0.1\n\n        const animateLoop = time => {\n            this.requestId = window.requestAnimationFrame(animateLoop)\n            const delta = time - then\n\n            if (delta >= interval - tolerance) {\n                then = time - (delta % interval)\n                this.animate(delta)\n            }\n        }\n        this.requestId = window.requestAnimationFrame(animateLoop)\n    }\n\n    stop() {\n        window.cancelAnimationFrame(this.requestId)\n    }\n\n}\n\nexport { AnimationFrame, AnimationFunction }","import { Env } from './env'\nimport { ES } from '../events/event'\nimport { showStats, Stats } from '../core/stats'\nimport { Interface } from '../render'\nimport { AnimationFrame } from './animationFrame'\n\ntype RendererType = 'normal' | 'offscreen'\n\n// Static property\nlet rendererType: RendererType = 'normal'\n\nclass Game {\n    private name: string\n    private env?: Env\n    private tick: number\n    private gameLoop: Function\n    private stats: Stats\n    private showStatsPanel: boolean\n    private animationFrame: AnimationFrame\n    private fps: number = 60\n\n    constructor(name?: string, env?: Env, fps: number = 60) {\n        this.name = name\n        this.env = env\n        this.tick = 0\n        this.stats = null\n        this.showStatsPanel = true\n        this.gameLoop = null\n        this.fps = fps\n    }\n\n    static setRendererType(type: RendererType) {\n        rendererType = type\n    }\n\n    static get rendererType(): RendererType {\n        return rendererType as RendererType\n    }\n\n    toggleStats(show?: boolean): void {\n        if (show !== undefined) {\n            this.showStatsPanel = show\n        } else {\n            this.showStatsPanel = !this.showStatsPanel\n        }\n        if (this.showStatsPanel) {\n            this.stats = showStats()\n        } else {\n            this.stats = null\n            if (document.querySelector('.stats')) document.querySelector('.stats').remove()\n        }\n    }\n\n    private makeAnimationFrame(): void {\n        this.animationFrame = new AnimationFrame(time => this.update(time), this.fps)\n    }\n\n    setMainLoop(func: Function): void {\n        this.gameLoop = func\n        this.makeAnimationFrame()\n    }\n\n    setFPS(fps: number) {\n        this.fps = fps\n        this.makeAnimationFrame()\n    }\n\n    update(time: number): void {\n        this.stats?.begin()\n        ES.tick()\n        if (this.gameLoop) this.gameLoop(time)\n        if (this.tick % Interface.updateInterval === 0) Interface.update()\n        this.stats?.end()\n        this.tick++\n    }\n\n    start(): void {\n        if (!this.gameLoop) throw new Error('No game loop')\n        if (!this.animationFrame) throw new Error('AnimationFrame')\n\n        window.addEventListener('DOMContentLoaded', () => {\n            if (this.name) { document.title = this.name }\n            ES.init() // Event System\n            Interface.init()\n            if (this.showStatsPanel) {\n                this.stats = showStats()\n            }\n            this.animationFrame.start()\n        })\n    }\n}\n\nexport { Game }\n","interface GameObjectInterface {\n    x?: number\n    y?: number\n    update: (...args: any[]) => void\n    render: (ctx: CanvasRenderingContext2D, ...args: any[]) => void\n    [propName: string]: any\n}\n\n\nclass GameObject implements GameObjectInterface {\n    public x: number\n    public y: number\n    public width?: number\n    public height?: number\n\n    constructor(x: number, y: number) {\n        this.x = x\n        this.y = y\n    }\n\n    public collide(obj: GameObject): boolean { // AABB algorithm\n        if (!obj.width || !obj.height || !this.width || !this.height) return false // Should throw an error ?\n        return this.x < obj.x + obj.width &&\n            this.x + this.width > obj.x &&\n            this.y < obj.y + obj.height &&\n            this.height + this.y > obj.y\n    }\n\n    public update(...args: any[]) { }\n\n    public render(ctx: CanvasRenderingContext2D, ...args: any[]) { }\n}\n\nclass PlayerObject extends GameObject {\n    constructor(x: number, y: number) {\n        super(x, y)\n    }\n\n    public update(...args: any[]) { }\n\n    public render(ctx: CanvasRenderingContext2D, ...args: any[]) { }\n}\n\nexport { GameObject, PlayerObject }\n","class Cooldown {\n    delay: number // ms\n    callback: () => any | void // TODO : add params support\n\n    constructor(delay: number, callback: () => any | void) {\n        this.delay = delay\n        this.callback = callback\n        window.setTimeout(this.callback, this.delay)\n    }\n}\n\nexport { Cooldown }","import Random from '@dorianb/random-js'\n\nimport { GameObject } from './objects'\nimport { Vector2, clamp, inRange } from './math'\nimport { Cooldown } from '../events'\nimport { OffscreenRenderer, Renderer } from '../render'\nimport { Game } from '..'\n\nconst GRAVITY: number = .01 // N\n\ntype ParticleAngle = number | 'random'\ntype Callback = () => void\n\nclass Particle extends GameObject {\n    public id: number\n    public pos: Vector2\n    public velocity: Vector2\n    public color: string\n    public angle: ParticleAngle\n    public radius: number\n    public opacity: number\n\n    constructor(id: number, pos: Vector2, speed: number = 5, angle?: ParticleAngle, color?: string) {\n        super(pos.x, pos.y)\n        this.id = id\n        this.pos = pos.clone()\n        this.angle = (angle && angle != 'random') ? (angle % 2 * Math.PI) : (Math.PI / 2 + Math.random() * 2 * Math.PI)\n        this.velocity = new Vector2(Math.random() * speed * Math.cos(this.angle), Math.random() * speed * Math.sin(this.angle))\n        this.color = color || 'red'\n        this.opacity = clamp(100, Math.random() * 255, 255)\n        this.radius = 2\n    }\n\n    update(): void {\n        this.velocity.y += GRAVITY\n        this.pos = this.pos.add(this.velocity)\n        this.opacity--\n    }\n\n    render(): void {\n        switch (Game.rendererType) {\n            case 'normal':\n                Renderer.circle(this.pos.x, this.pos.y, this.radius, { fillStyle: this.color, lineWidth: 1, globalAlpha: this.opacity / 255 })\n                break\n            case 'offscreen':\n                OffscreenRenderer.circle(this.pos.x, this.pos.y, this.radius, { fillStyle: this.color, lineWidth: 1, globalAlpha: this.opacity / 255 })\n                break\n        }\n    }\n}\n\n// TODO : add particle options (color, size, etc)\nclass ParticuleGenerator {\n    public pos: Vector2\n    public lifeDuration: number\n    public particles: Array<Particle>\n    private UUID: number\n\n    constructor(nbParticles: number, pos: Vector2, lifeDuration: number, onDestroy?: Callback) {\n        this.pos = pos\n        this.lifeDuration = lifeDuration\n        this.particles = []\n        this.UUID = Random.randint(1, 100) * 100 // TODO : move UUID generation to math.ts\n        for (let i = 0; i < nbParticles; i++) {\n            let particles: Particle = new Particle(this.UUID + i, this.pos)\n            this.particles.push(particles)\n\n        }\n        let cd: Cooldown = new Cooldown(this.lifeDuration, () => {\n            this.destroy()\n            onDestroy()\n        })\n    }\n\n    addParticles(array: Array<Particle>): Array<Particle> {\n        return array.concat(this.particles)\n    }\n\n    removeParticles(array: Array<Particle>): Array<Particle> {\n        const nbParticles: number = this.particles.length\n        return array.filter(el => !inRange(el.id, this.UUID, this.UUID + nbParticles))\n    }\n\n    destroy(): void {\n        // this.particles = []\n    }\n}\n\n\nexport { Particle, ParticuleGenerator }","interface NeihboorObject {\n    top?: Cell\n    right?: Cell\n    bottom?: Cell\n    left?: Cell\n}\n\n\n// TODO: Remove \nenum CellType {\n    Turret,\n    Road,\n    Ground,\n    Empty\n}\n\n// TODO: add properties scope\nclass Grid {\n    rows: number\n    cols: number\n    cells: Array<Cell>\n    focusCell: Cell\n\n    constructor(cols: number, rows: number) {\n        this.rows = rows\n        this.cols = cols\n        this.cells = []\n        this.focusCell = null\n        this.createCells()\n        this.defineNeighboors()\n    }\n\n    createCells() {\n        for (let col = 0; col < this.cols; col++) {\n            for (let row = 0; row < this.rows; row++) {\n                this.cells.push(new Cell(col, row))\n            }\n        }\n    }\n\n    updateCell(newCell: Cell) {\n        if (!this.cells.includes(newCell)) return\n        if (newCell.width !== 1 || newCell.height !== 1) {\n            if (newCell.width > 1) {\n                let range: number = newCell.width - 1\n                let removeCell: Array<Cell> = this.cells.filter(cell => cell.y === newCell.y && cell.x > newCell.x && cell.x <= newCell.x + range)\n                this.cells = this.cells.filter(cell => !removeCell.includes(cell))\n            }\n            if (newCell.height > 1) {\n                let range: number = newCell.height - 1\n                let removeCell: Array<Cell> = this.cells.filter(cell => cell.x === newCell.x && cell.y > newCell.y && cell.y <= newCell.y + range)\n                this.cells = this.cells.filter(cell => !removeCell.includes(cell))\n            }\n        }\n        this.defineNeighboors()\n        this.cells[this.cells.indexOf(newCell)] = newCell\n    }\n\n    defineNeighboors() {\n        this.cells.forEach(cell => {\n            cell.neighboor.top = cell.y >= 1 ? this.cells.filter(othercell => othercell.x <= cell.x && othercell.x + othercell.width > cell.x && othercell.y === cell.y - cell.height)[0] : null\n            cell.neighboor.bottom = cell.y <= this.rows - 1 ? this.cells.filter(othercell => othercell.x <= cell.x && othercell.x + othercell.width > cell.x && othercell.y === cell.y + cell.height)[0] : null\n            cell.neighboor.left = cell.x >= 1 ? this.cells.filter(othercell => othercell.y <= cell.y && othercell.y + othercell.height > cell.y && othercell.x === cell.x - cell.width)[0] : null\n            cell.neighboor.right = cell.x <= this.cols - 1 ? this.cells.filter(othercell => othercell.y <= cell.y && othercell.y + othercell.height > cell.y && othercell.x === cell.x + cell.width)[0] : null\n        })\n    }\n\n}\n\nclass Cell {\n    x: number\n    y: number\n    width: number\n    height: number\n    highlight: boolean\n    type: CellType\n    neighboor: NeihboorObject\n\n    constructor(x: number, y: number, width = 1, height = 1) {\n        this.x = x\n        this.y = y\n        this.width = width\n        this.height = height\n        this.highlight = false\n        this.type = CellType.Ground\n        this.neighboor = {}\n    }\n\n    toggleHighlight() {\n        this.highlight = !this.highlight\n    }\n}\n\nexport { Grid, Cell, CellType }\n","// import config-lib\n\nconst Config = {}\n\nexport { Config }","// Dorian&Co © 2021\n\ninterface EnvInterface {\n    width: number\n    height: number\n    update: (deltaTime?: number, ...args: any[]) => void\n    render: (...args: any[]) => void\n}\n\nclass Env implements EnvInterface {\n    public width: number\n    public height: number\n\n    constructor(width: number, height: number) {\n        this.width = width\n        this.height = height\n    }\n\n    update(): void { }\n\n    render(): void { }\n\n}\n\nexport { Env }"],"names":["Math","random","a","b","floor","array","length","Random","choice","percentage","[object Object]","x","y","vec","Vector2","this","sqrt","Point","V_NULL","V_UNIT","min","max","clamp","EventType","EventType2","name","callback","type","listeners","params","event","ES","getCustomEvent","forEach","existingEvent","push","Event","addEvent","windowEvents","keyboardDownEvents","keyboardPressedEvents","customEvents","currentKeyEvents","addEventListener","find","code","e","filter","KeyboardDown","KeyboardPressed","Mouse","Window","bindEvents","Custom","window","keyEvent","f","a2","appendChild","dom","d","c","children","style","display","l","document","createElement","cssText","preventDefault","k","Date","now","g","r","Panel","h","self","performance","memory","t","REVISION","addPanel","showPanel","u","begin","end","c2","update","usedJSHeapSize","jsHeapSizeLimit","domElement","setMode","f2","Infinity","round","devicePixelRatio","v","m","n","p","q","width","height","getContext","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","h2","w","drawImage","ratio","preventRightClick","pixelRatio","canvas2","setTransform","oncontextmenu","el","onload","element","querySelector","defaultStyleObject","strokeStyle","lineWidth","lineJoin","globalCompositeOperation","precision","num","ctx","createCanvas","setContext","context","obj","Error","styleObject","__assign","prop","color","canvas","clearRect","x1","y1","x2","y2","beginPath","moveTo","lineTo","stroke","noStyle","r_x","r_y","r_w","r_h","strokeRect","points","i","radius","arc","PI","circle","texture","save","translate","scale","rotate","rotation","image","offset","restore","clip","rectSprite","rect","title","content","args","methodName","WORKER_PATH","offscreenCanvas","worker","workerIsInitialized","renderStack","textureAlias","Map","URL","location","origin","initRenderWorker","Game","rendererType","setRendererType","clientWidth","clientHeight","workerUrl","Worker","transferControlToOffscreen","sendMessageToWorker","dpr","onmessage","data","log","RenderCall","transfer","postMessage","WorkerMessage","addRenderCall","id","textureId","convertToBitmap","then","adaptedTexture","items","updateInterval","itemPositions","position","options","internalAddItem","onClick","item","index","Interface","addToDom","container","classList","add","pos","positionedContainer","body","value","innerText","entries","key","value2","TLContainer","top","rate","stats","Stats","toggle","statsShift","animate","fps","requestId","interval","animateLoop","requestAnimationFrame","delta","time","cancelAnimationFrame","env","tick","showStatsPanel","gameLoop","show","showStats","remove","animationFrame","AnimationFrame","func","makeAnimationFrame","init","start","ctx2","delay","setTimeout","GameObject","speed","angle","clone","velocity","cos","sin","opacity","CellType","CellType2","highlight","neighboor","cols","rows","cells","focusCell","createCells","defineNeighboors","col","row","Cell","newCell","includes","range","removeCell","cell","indexOf","othercell","bottom","left","right","nbParticles","lifeDuration","onDestroy","particles","UUID","randint","Particle","Cooldown","destroy","concat","inRange","source","Image","src","size","createImageBitmap","innerWidth","innerHeight"],"mappings":"uwBAceA,KAAKC,wBAWDC,EAAGC,UACPH,KAAKI,MAAMF,EAAIF,KAAKC,YAAgBC,kBAUjCG,UACHA,OAAgBJ,SAAWI,EAAMC,8BAUjCC,EAAON,SAAW,wBASlBM,EAAOC,OAAO,IAAK,mBAUfC,UACJF,EAAON,SAAWQ,EAAa,WAI7BF,UC/DbG,YAAYC,EAAWC,QACdD,EAAIA,OACJC,EAAIA,EAGNF,IAAIG,UACA,IAAIC,EAAQC,KAAKJ,EAAIE,EAAIF,EAAGI,KAAKH,EAAIC,EAAID,GAG7CF,eACI,IAAII,EAAQC,KAAKJ,EAAGI,KAAKH,GAG7BF,KAAKG,UACDb,KAAKgB,WAAWL,EAAIE,EAAIF,IAAM,QAAUC,EAAIC,EAAID,IAAM,UAKxDK,EAAQH,EAERI,EAAS,IAAIJ,EAAQ,EAAG,GACxBK,EAAS,IAAIL,EAAQ,EAAG,cAEfM,EAAaT,EAAWU,UACnCrB,KAAKqB,IAAID,EAAKpB,KAAKoB,IAAIT,EAAGU,eAGbV,EAAWS,EAAaC,UACrCC,EAAMF,EAAKT,EAAGU,KAASV,MCnC7BY,EAAAC,GAAAA,EAAAD,gKAUDb,YAAYe,EAAcC,EAAoBC,EAAkB,QACvDF,KAAOA,OACPC,SAAWA,OACXC,KAAOA,OACPC,UAAY,CAACb,KAAKW,sBAGfD,EAAcI,SAChBC,EAAeC,EAAGC,eAAeP,GACnCK,KACMF,UAAUK,YAAoBP,EAASG,eAI3CJ,EAAcC,SACdQ,EAAuBH,EAAGC,eAAeP,MAC3CS,IACcN,UAAUO,KAAKT,OAC1B,OACGI,EAAe,IAAIM,EAAMX,EAAMC,EAAU,KAC5CW,SAASP,qBAIHL,EAAcC,KACxBW,SAAS,IAAID,EAAMX,EAAMC,EAAU,wBAGtBD,EAAcC,KAC3BW,SAAS,IAAID,EAAMX,EAAMC,EAAU,wBAGtBA,KACbW,SAAS,IAAID,EAAM,QAASV,EAAU,WAI3CK,EAAkB,UCrCpBrB,mBACS4B,aAAe,QACfC,mBAAqB,QACrBC,sBAAwB,QACxBC,aAAe,QAEfC,iBAAmB,GAI5BhC,cACWiC,iBAAiB,eACf5B,KAAK2B,iBAAiBE,SAAcd,EAAMe,OAASC,EAAED,aACjDH,iBAAiBP,KAAKW,QAE1BN,sBAAsBP,aACnBa,EAAED,OAASf,EAAML,QACXC,SAASoB,gBAIpBH,iBAAiB,aACf5B,KAAK2B,iBAAiBpC,cACtBoC,iBAAmB3B,KAAK2B,iBAAiBK,WAAgBjB,EAAMe,OAASC,EAAED,WAIvFnC,SAASoC,UACGA,EAAEnB,WACDJ,EAAUyB,kBACNT,mBAAmBJ,KAAKW,QAC5BvB,EAAU0B,qBACNT,sBAAsBL,KAAKW,QAC/BvB,EAAU2B,iBAEV3B,EAAU4B,YACNb,aAAaH,KAAKW,QAClBM,kBACJ7B,EAAU8B,YACNZ,aAAaN,KAAKW,IAInCpC,eAAee,UACJV,KAAK0B,aAAaG,SAAUE,EAAErB,OAASA,IAGlDf,kBAES4B,aAAaL,YAAiBqB,OAAOX,iBAAiBb,EAAML,KAAaK,EAAMJ,YAGxFhB,OACSK,KAAK2B,iBAAiBpC,aACtBiC,mBAAmBN,kBACfS,iBAAiBT,aACda,EAAED,OAASU,EAAS9B,QACXC,SAASoB,+KCpEuH,IAAeU,cAAAA,EAAE,sBAAsBC,YAAKC,YAAYD,EAAEE,KAAYF,aAAaA,WAAWG,EAAE,EAAEA,EAAEC,EAAEC,SAASxD,OAAOsD,MAAME,SAASF,GAAGG,MAAMC,QAAQJ,IAAIH,EAAE,QAAQ,SAASA,MAAMQ,EAAE,EAAEJ,EAAEK,SAASC,cAAc,SAASJ,MAAMK,QAAQ,yEAAyEzB,iBAAiB,SAAQ,SAASc,KAAKY,qBAChfJ,EAAEJ,EAAEC,SAASxD,WAAS,OAAQgE,gBAAgBC,MAAMC,MAAMC,EAAEH,EAAEpE,EAAE,EAAEwE,EAAE5B,EAAE,IAAIU,EAAEmB,MAAM,MAAM,OAAO,SAASC,EAAE9B,EAAE,IAAIU,EAAEmB,MAAM,KAAK,OAAO,YAAYE,KAAKC,aAAaD,KAAKC,YAAYC,WAAWC,EAAElC,EAAE,IAAIU,EAAEmB,MAAM,KAAK,OAAO,kBAAW,GAAS,CAACM,SAAS,GAAGtB,IAAIE,EAAEqB,SAASpC,EAAEqC,UAAUC,EAAEC,MAAM,2BAA2Bd,MAAMC,OAAOc,IAAI,mBAAmBC,gBAAgBhB,MAAMC,WAAQgB,OAAOD,EAAEjB,EAAE,KAAQiB,EAAEd,EAAE,QAAQe,OAAO,IAAItF,KAAKuE,GAAG,KAAKA,EAAEc,EAAErF,EAAE,EAAE8E,GAAG,KAAKpB,EAAEkB,YAAYC,SAASS,OAAO5B,EAAE6B,eACte,QAAQ7B,EAAE8B,gBAAgB,gBAAgBH,GAAGC,OAAO,aAAazE,KAAKuE,OAAOK,WAAW9B,EAAE+B,QAAQR,KAAMT,MAAM,SAAS7B,EAAE+C,EAAE5B,OAAOJ,EAAEiC,EAAAA,EAASxB,EAAE,EAAEG,EAAEzE,KAAK+F,MAAM7F,EAAEuE,EAAEnB,OAAO0C,kBAAkB,GAAGtB,EAAE,GAAGxE,EAAE0E,EAAE,GAAG1E,EAAE8E,EAAE,EAAE9E,EAAE+F,EAAE,EAAE/F,EAAE0D,EAAE,EAAE1D,EAAEgG,EAAE,GAAGhG,EAAEiG,EAAE,GAAGjG,EAAEkG,EAAE,GAAGlG,EAAEmG,EAAEnC,SAASC,cAAc,YAAYmC,MAAM5B,IAAI6B,OAAO3B,IAAIb,MAAMK,QAAQ,6BAA6BjE,EAAEkG,EAAEG,WAAW,eAAQC,KAAK,QAAQ,EAAEvG,EAAE,kCAAkCwG,aAAa,QAAQC,UAAU1C,IAAI2C,SAAS,EAAE,EAAElC,EAAEE,KAAK+B,UAAUd,IAAIgB,SAAS/D,EAAEkC,EAAEiB,KAClfW,SAAShD,EAAEsC,EAAEC,EAAEC,KAAKO,UAAU1C,IAAI6C,YAAY,KAAKF,SAAShD,EAAEsC,EAAEC,EAAEC,GAAS,CAACzC,IAAI0C,EAAEb,OAAO,SAASuB,EAAEC,KAAKhH,KAAKoB,IAAIyC,EAAEkD,KAAK/G,KAAKqB,IAAIiD,EAAEyC,KAAKJ,UAAU1C,IAAI6C,YAAY,IAAIF,SAAS,EAAE,EAAElC,EAAEwB,KAAKS,UAAUd,IAAIgB,SAASpC,EAAEsC,GAAG,IAAIjE,EAAE,KAAK2B,EAAEZ,GAAG,IAAIY,EAAEH,GAAG,IAAIU,EAAEiB,KAAKgB,UAAUZ,EAAEzC,EAAE1D,EAAEgG,EAAEC,EAAEjG,EAAEkG,EAAExC,EAAEsC,EAAEC,EAAEjG,EAAEkG,KAAKQ,SAAShD,EAAEuC,EAAEjG,EAAEgG,EAAEhG,EAAEkG,KAAKO,UAAU1C,IAAI6C,YAAY,KAAKF,SAAShD,EAAEuC,EAAEjG,EAAEgG,EAAEhG,EAAEuE,KAAKsC,EAAEC,GAAGZ,OAAc5C,oDCK9WwD,EAAWpC,EAAWsC,EAAgBC,SAClDC,EAAqBF,GAAS5D,OAAO0C,kBAAoB,EACzDqB,EAA4BnD,SAASC,cAAc,mBAClDmC,MAAQU,EAAII,IACZb,OAAS3B,EAAIwC,IACbrD,MAAMuC,MAAQU,EAAI,OAClBjD,MAAMwC,OAAS3B,EAAI,KACR,GAAdwC,KACOZ,WAAW,MAAMc,aAAaF,EAAY,EAAG,EAAGA,EAAY,EAAG,GAEpED,MACKI,iBAAqBzE,EAAEuB,kBAE3BgD,aAGWA,EAA2BG,UACtCC,OAAS,SACRC,EAAUxD,SAASyD,cAAcH,GAChCE,MAAmBxD,SAASC,cAAcqD,MACvC9D,YAAY2D,YACXM,cAAc,QAAQjE,YAAYgE,UCb7CE,EAAkC,CACpCC,YAAa,QACbC,UAAW,EACXC,SAAU,QACVpB,UAAW,cACXG,YAAa,EACbkB,yBAA0B,WAG1BC,ECnByB,MAAjBpD,KAAKX,UAAwC,MAAfW,KAAKvB,ODmBT,EAAI,UAAY0C,kBAAoB,cAG3DkC,cACKD,GAAaA,MAG7BE,EAA2B,2BAKb7B,EAAeC,SACnBc,EAA4Be,EAAa9B,EAAOC,YACzCc,EAAQ,UACZgB,WAAWhB,EAAOb,WAAW,OAC/Ba,oBAGOiB,KACRA,6BAICH,eAGEI,OACJJ,QAAW,IAAIK,MAAM,yEACpBC,EAAcC,qBAAKd,GAAuBW,WACvCI,KAAQF,EACTN,EAAIQ,KAAUF,EAAYE,OACtBA,GAAQF,EAAYE,iBAKvBC,GACLA,KACS7E,MAAM,CAAE4C,UAAWiC,MACxBhC,SAAS,EAAG,EAAGuB,EAAIU,OAAOvC,MAAO6B,EAAIU,OAAOtC,WAE5CuC,UAAU,EAAG,EAAGX,EAAIU,OAAOvC,MAAO6B,EAAIU,OAAOtC,oBAI7CwC,EAAYC,EAAYC,EAAYC,EAAYX,KAC/CxE,MAAMwE,KACXY,cACAC,OAAOrD,EAAMgD,GAAKhD,EAAMiD,MACxBK,OAAOtD,EAAMkD,GAAKlD,EAAMmD,MACxBI,qBAGI3I,EAAWC,EAAW0F,EAAeC,EAAgBgC,EAAmBgB,GAC3EA,KAAkBxF,MAAMwE,SACtBiB,EAAKC,EAAKC,EAAKC,GAAO,CAAC5D,EAAMpF,GAAIoF,EAAMnF,GAAImF,EAAMO,GAAQP,EAAMQ,MAClEK,SAAS4C,EAAKC,EAAKC,EAAKC,KACxBC,WAAWJ,EAAKC,EAAKC,EAAKC,eAGtBE,EAAsBtB,MACzBsB,EAAOvJ,UACHyD,MAAMwE,KACXY,cACAC,OAAOrD,EAAM8D,EAAO,GAAGlJ,GAAIoF,EAAM8D,EAAO,GAAGjJ,YACtCkJ,EAAI,EAAGA,EAAID,EAAOvJ,OAAQwJ,MAC3BT,OAAOtD,EAAM8D,EAAOC,GAAGnJ,GAAIoF,EAAM8D,EAAOC,GAAGlJ,MAE/C0I,wBAGM3I,EAAWC,EAAWmJ,EAAgBxB,KACvCxE,MAAMwE,KACXY,cACAa,IAAIjE,EAAMpF,GAAIoF,EAAMnF,GAAImJ,EAAQ,EAAG,EAAI/J,KAAKiK,MAC5CX,sBAGK3I,EAAWC,EAAW2H,KACtB2B,OAAOvJ,EAAGC,EAAG,EAAG2H,qBAGX5H,EAAWC,EAAW0F,EAAeC,EAAgB4D,KAC1DpG,MAAM,MACXqG,SACAC,UAAUtE,EAAMpF,EAAI2F,EAAQ,GAAIP,EAAMnF,EAAI2F,EAAS,MACnD+D,MAAMH,EAAQG,MAAM3J,EAAGwJ,EAAQG,MAAM1J,KACrC2J,OAAOJ,EAAQK,YACfvD,UACAkD,EAAQM,MACR1E,EAAMO,EAAQ6D,EAAQO,OAAO/J,EAAI2F,EAAQ,GACzCP,EAAMQ,EAAS4D,EAAQO,OAAO9J,EAAI2F,EAAS,GAC3CR,EAAMO,GACNP,EAAMQ,MAENoE,8BAGYhK,EAAWC,EAAWmJ,EAAgBI,KAClDC,SACAjB,cACAa,IAAIjE,EAAMpF,GAAIoF,EAAMnF,GAAImJ,EAAQ,EAAG,EAAI/J,KAAKiK,MAC5CW,SACKC,WAAWlK,EAAIoJ,EAAQnJ,EAAImJ,EAAQ,EAAIA,EAAQ,EAAIA,EAAQI,KAChEQ,sBAGI/B,EAAejI,EAAWC,EAAW0F,EAAeC,KACnDuE,KAAKnK,EAAGC,EAAG0F,EAAOC,EAAQ,CAC/BI,UAAWiC,EACXZ,yBAA0B,WAC1BlB,YAAa,eEtIrBpG,YAAYqK,EAAeC,QAClBD,MAAQA,OACRC,QAAUA,WCFnBtK,YAAYe,EAAMwJ,QACTC,WAAazJ,OACbwJ,KAAOA,SCGdE,EAAsB,wDAExBC,EAAmC,KACnCC,EAAiB,KACjBxC,EAA4B,KAC5ByC,GAAsB,EACtBC,EAAiC,SAE/BC,EAAqC,IAAIC,uCAKdJ,sCAESD,0CAEIE,kCAERC,gCAEF,IAAIG,IAAIP,EAAa7H,OAAOqI,SAASC,sBAGvDtF,EAAeC,YAChB6B,EAAa9B,EAAOC,EAAQ,KACnBsF,iBAAiBhD,EAAQvC,EAAOC,KACrCsC,EAAQ,QACdA,0BAGaxB,EAAQf,EAAeC,GACjB,cAAtBuF,EAAKC,gBACAC,gBAAgB,iBAErBC,YAAEA,eAAaC,GAAiB7E,QAC9B8E,EAAY,IAAIT,IAAIP,EAAa7H,OAAOqI,SAASC,UAC9C,IAAIQ,OAAOD,EAAW,CAAExK,KAAM,aACrB0F,EAAOgF,kCACpBC,oBAAoB,aAAc,CACnChG,MAAOA,GAAS2F,EAChB1F,OAAQA,GAAU2F,EAClBrD,OAAQuC,EACRmB,IAAKjJ,OAAO0C,kBAAoB,GACjC,CAACoF,MAEGoB,UAAY,EAAGC,MAAQ1B,MAAAA,EAAO0B,KAAAA,cACzB1B,OACC,cACO2B,IAAI,sCAAuCD,aAElD,iBACqB,yBAMjBhL,EAAcwJ,KACnB9I,KAAK,IAAIwK,EAAWlL,EAAMwJ,GAAQ,gCAGvBF,EAAe0B,EAAYG,UAC3CvB,EAAOwB,YAAY,IAAIC,EAAc/B,EAAO0B,GAAOG,GAAY,iBAG7DrE,QAAgCwE,cAAc,QAAS,CAAExE,IAAAA,iBAEzDK,QAA6BmE,cAAc,QAAS,CAAEnE,MAAAA,gBAEvDG,EAAYC,EAAYC,EAAYC,EAAYX,QAAgCwE,cAAc,OAAQ,CAAEhE,GAAAA,EAAIC,GAAAA,EAAIC,GAAAA,EAAIC,GAAAA,EAAIX,IAAAA,gBAExH5H,EAAWC,EAAW0F,EAAeC,EAAgBgC,EAAmBgB,QAAgCwD,cAAc,OAAQ,CAAEpM,EAAAA,EAAGC,EAAAA,EAAG0F,MAAAA,EAAOC,OAAAA,EAAQgC,IAAAA,EAAKgB,QAAAA,gBAE1JM,EAAsBtB,QAAgCwE,cAAc,OAAQ,CAAElD,OAAAA,EAAQtB,IAAAA,kBAEpF5H,EAAWC,EAAWmJ,EAAgBxB,QAAgCwE,cAAc,SAAU,CAAEpM,EAAAA,EAAGC,EAAAA,EAAGmJ,OAAAA,EAAQxB,IAAAA,iBAE/G5H,EAAWC,EAAW2H,QAAgCwE,cAAc,QAAS,CAAEpM,EAAAA,EAAGC,EAAAA,EAAG2H,IAAAA,sBAGhF5H,EAAWC,EAAW0F,EAAeC,EAAgB4D,GAC/DA,EAAQ6C,MAAMxB,OACTuB,cAAc,aAAc,CAAEpM,EAAAA,EAAGC,EAAAA,EAAG0F,MAAAA,EAAOC,OAAAA,EAAQ0G,UAAW9C,EAAQ6C,OAEnEE,kBAAkBC,YACThD,EAAQ6C,IAAMI,OACtBd,oBAAoB,aAAc,CAAEU,GAAI7C,EAAQ6C,GAAI7C,QAASiD,iCAKpDzM,EAAWC,EAAWmJ,EAAgBI,MACxDA,EAAQ6C,MAAMxB,OACTuB,cAAc,eAAgB,CAAEpM,EAAAA,EAAGC,EAAAA,EAAGmJ,OAAAA,EAAQkD,UAAW9C,EAAQ6C,SACnE,OACGI,QAAgCjD,EAAQ+C,oBACjC/C,EAAQ6C,IAAMI,OACtBd,oBAAoB,aAAc,CAAEU,GAAI7C,EAAQ6C,GAAI7C,QAASiD,iBAI9DxE,EAAejI,EAAWC,EAAW0F,EAAeC,QAA6BwG,cAAc,SAAU,CAAEnE,MAAAA,EAAOjI,EAAAA,EAAGC,EAAAA,EAAG0F,MAAAA,EAAOC,OAAAA,0BAGzH,QACTwG,cAAc,2BAIdzB,SACAgB,oBAAoB,SAAU,CAAEf,YAAAA,MACvB,SChHlB0B,EAAoB,MCApBI,EAA8B,GAC9BC,EAAyB,QAOvBC,EAAgB,CAAC,WAAY,YAAa,cAAe,eAAgB,iCAK5D7L,EAAiC8L,EAAyBC,KAC3DC,gBAAgBhM,EAAU8L,EAAUC,oBAGjC/L,EAAiC8L,EAAyBC,EAAsBE,KACnFD,gBAAgBhM,EAAU8L,EAAUC,EAASE,0BAG5BjM,EAAiC8L,EAAyBC,EAAsBE,SACrGC,EAAsB,CAAElM,SAAAA,EAAU8L,SAAAA,EAAUC,QAAAA,EAASE,QAAAA,KACrDxL,KAAKyL,SACLC,EAAgBR,EAAM/M,cACrBqC,iBAAiB,QAAQ,IAAMmL,EAAUC,SAASH,EAAMC,yBAIzDG,EAA4B9J,SAASC,cAAc,SAC/C8J,UAAUC,IAAI,eAAgB,wBAC/BC,KAAOZ,EAAe,OACrBa,EAAsClK,SAASC,cAAc,SAC/C8J,UAAUC,IAAIC,KACxBzK,YAAY0K,YAEjBC,KAAK3K,YAAYsK,mBAGdJ,EAAqBC,iBAC3BS,EAAgBV,EAAKlM,WACrBgG,EAA2BxD,SAASC,cAAc,UAChD8J,UAAUC,IAAI,wBACdlB,GAAK,QAAQa,MACbU,UAAYD,SACbE,QAAQZ,EAAKH,SAAW,IAAIxL,SAAQ,EAAEwM,EAAKC,KAAWhH,EAAQ3D,MAAM0K,GAAOC,IAC9Ed,EAAKJ,2BAAmB7F,cAAc,oBAAoBiG,EAAKJ,gBAAa9J,YAAYgE,qBAC9EC,cAAc,+BAA4BjE,YAAYgE,GAC9DkG,EAAKD,YACChL,iBAAiB,YAAciL,EAAKD,QAAQ7K,OAC5CmL,UAAUC,IAAI,0CAKpBjM,SAAQ,CAAC2L,EAAM9D,WACXwE,EAAgBV,EAAKlM,WACrBgG,EAA2BxD,SAASyD,cAAc,uBAAuBmC,EAAI,KAC/EpC,GAAWA,EAAQ6G,YAAcD,MACzBC,UAAYD,wBAMd/H,SACRoI,EAA2BzK,SAASyD,cAAc,aACpDgH,MACY5K,MAAM6K,IAAM,GAAGrI,gCAIVsI,KACJA,qCAIVvB,sBCjFLwB,EAAe,IAAIC,EACnBvH,EAAqBtD,SAASC,cAAc,gBAC/C8J,UAAUe,OAAO,WACd7J,UAAU,KACbzB,YAAYoL,EAAMnL,cACZ0K,KAAK3K,YAAY8D,KAChByH,WAAW,IACdH,UCLPpO,YAAYwO,EAA4BC,EAAc,YAC7CC,UAAY,OACZF,QAAUA,OACVC,IAAMA,GACN7L,aAAc,IAAIkF,MAAM,qBAGjC9H,YACQyM,EAAerI,YAAYN,YACzB6K,EAAmB,IAAOtO,KAAKoO,IAG/BG,WACGF,UAAY9L,OAAOiM,sBAAsBD,SACxCE,EAAQC,EAAOtC,EAEjBqC,GAASH,EANS,OAOXI,EAAQD,EAAQH,OAClBH,QAAQM,UAGhBJ,UAAY9L,OAAOiM,sBAAsBD,GAGlD5O,cACWgP,qBAAqB3O,KAAKqO,gBCvBrCrD,EAA6B,iBAY7BrL,YAAYe,EAAekO,EAAWR,EAAc,aAF9B,QAGb1N,KAAOA,OACPkO,IAAMA,OACNC,KAAO,OACPd,MAAQ,UACRe,gBAAiB,OACjBC,SAAW,UACXX,IAAMA,yBAGQxN,KACJA,mCAIRoK,EAGXrL,YAAYqP,QAECF,oBADI,IAATE,EACsBA,GAEChP,KAAK8O,eAE5B9O,KAAK8O,oBACAf,MAAQkB,UAERlB,MAAQ,KACT5K,SAASyD,cAAc,oBAAoBA,cAAc,UAAUsI,UAIvEvP,0BACCwP,eAAiB,IAAIC,MAAuBpP,KAAKyE,OAAOiK,IAAO1O,KAAKoO,KAG7EzO,YAAY0P,QACHN,SAAWM,OACXC,qBAGT3P,OAAOyO,QACEA,IAAMA,OACNkB,qBAGT3P,OAAO+O,yBACEX,UAAOzJ,UACTuK,OACC7O,KAAK+O,eAAeA,SAASL,GAC7B1O,KAAK6O,KAAO9B,EAAUR,gBAAmB,KAAa9H,uBACrDsJ,UAAOxJ,WACPsK,OAGTlP,YACSK,KAAK+O,eAAgB,IAAItH,MAAM,oBAC/BzH,KAAKmP,qBAAsB,IAAI1H,MAAM,yBAEnC7F,iBAAiB,oBAAoB,KACpC5B,KAAKU,gBAAiBsJ,MAAQhK,KAAKU,QACpC6O,SACOA,OACNvP,KAAK8O,sBACAf,MAAQkB,UAEZE,eAAeK,oBCxE5B7P,YAAYC,EAAWC,QACdD,EAAIA,OACJC,EAAIA,EAGNF,QAAQ6H,YACNA,EAAIjC,OAAUiC,EAAIhC,QAAWxF,KAAKuF,OAAUvF,KAAKwF,UAC/CxF,KAAKJ,EAAI4H,EAAI5H,EAAI4H,EAAIjC,OACxBvF,KAAKJ,EAAII,KAAKuF,MAAQiC,EAAI5H,GAC1BI,KAAKH,EAAI2H,EAAI3H,EAAI2H,EAAIhC,QACrBxF,KAAKwF,OAASxF,KAAKH,EAAI2H,EAAI3H,GAG5BF,UAAUuK,IAEVvK,OAAO8P,KAAkCvF,aC1BhDvK,YAAY+P,EAAe/O,QAClB+O,MAAQA,OACR/O,SAAWA,SACTgP,WAAW3P,KAAKW,SAAUX,KAAK0P,wBCMvBE,EASnBjQ,YAAYsM,EAAYmB,EAAcyC,EAAgB,EAAGC,EAAuBjI,SACtEuF,EAAIxN,EAAGwN,EAAIvN,QACZoM,GAAKA,OACLmB,IAAMA,EAAI2C,aACVD,MAASA,GAAkB,UAATA,EAAsBA,EAAQ,EAAI7Q,KAAKiK,GAAOjK,KAAKiK,GAAK,EAAoB,EAAhBjK,KAAKC,SAAeD,KAAKiK,QACvG8G,SAAW,IAAIjQ,EAAQd,KAAKC,SAAW2Q,EAAQ5Q,KAAKgR,IAAIjQ,KAAK8P,OAAQ7Q,KAAKC,SAAW2Q,EAAQ5Q,KAAKiR,IAAIlQ,KAAK8P,aAC3GjI,MAAQA,GAAS,WACjBsI,QAAU5P,EAAM,IAAqB,IAAhBtB,KAAKC,SAAgB,UAC1C8J,OAAS,EAGlBrJ,cACSqQ,SAASnQ,GA1BE,SA2BXuN,IAAMpN,KAAKoN,IAAID,IAAInN,KAAKgQ,eACxBG,UAGTxQ,gBACYoL,EAAKC,kBACJ,WACQ7B,OAAOnJ,KAAKoN,IAAIxN,EAAGI,KAAKoN,IAAIvN,EAAGG,KAAKgJ,OAAQ,CAAEpD,UAAW5F,KAAK6H,MAAOd,UAAW,EAAGhB,YAAa/F,KAAKmQ,QAAU,gBAEvH,cACiBhH,OAAOnJ,KAAKoN,IAAIxN,EAAGI,KAAKoN,IAAIvN,EAAGG,KAAKgJ,OAAQ,CAAEpD,UAAW5F,KAAK6H,MAAOd,UAAW,EAAGhB,YAAa/F,KAAKmQ,QAAU,YCpC5IC,EAAAC,GAAAA,EAAAD,uGAqEDzQ,YAAYC,EAAWC,EAAW0F,EAAQ,EAAGC,EAAS,QAC7C5F,EAAIA,OACJC,EAAIA,OACJ0F,MAAQA,OACRC,OAASA,OACT8K,WAAY,OACZ1P,KAAO,OACP2P,UAAY,GAGrB5Q,uBACS2Q,WAAatQ,KAAKsQ,6BCvFhB,4DCWX3Q,YAAY4F,EAAeC,QAClBD,MAAQA,OACRC,OAASA,EAGlB7F,UAEAA,wCFGAA,YAAY6Q,EAAcC,QACjBA,KAAOA,OACPD,KAAOA,OACPE,MAAQ,QACRC,UAAY,UACZC,mBACAC,mBAGTlR,sBACamR,EAAM,EAAGA,EAAM9Q,KAAKwQ,KAAMM,YACtBC,EAAM,EAAGA,EAAM/Q,KAAKyQ,KAAMM,SAC1BL,MAAMtP,KAAK,IAAI4P,EAAKF,EAAKC,IAK1CpR,WAAWsR,MACFjR,KAAK0Q,MAAMQ,SAASD,OACH,IAAlBA,EAAQ1L,OAAkC,IAAnB0L,EAAQzL,OAAc,IACzCyL,EAAQ1L,MAAQ,EAAG,KACf4L,EAAgBF,EAAQ1L,MAAQ,EAChC6L,EAA0BpR,KAAK0Q,MAAM1O,WAAeqP,EAAKxR,IAAMoR,EAAQpR,GAAKwR,EAAKzR,EAAIqR,EAAQrR,GAAKyR,EAAKzR,GAAKqR,EAAQrR,EAAIuR,SACvHT,MAAQ1Q,KAAK0Q,MAAM1O,YAAgBoP,EAAWF,SAASG,QAE5DJ,EAAQzL,OAAS,EAAG,KAChB2L,EAAgBF,EAAQzL,OAAS,EACjC4L,EAA0BpR,KAAK0Q,MAAM1O,WAAeqP,EAAKzR,IAAMqR,EAAQrR,GAAKyR,EAAKxR,EAAIoR,EAAQpR,GAAKwR,EAAKxR,GAAKoR,EAAQpR,EAAIsR,SACvHT,MAAQ1Q,KAAK0Q,MAAM1O,YAAgBoP,EAAWF,SAASG,WAG/DR,wBACAH,MAAM1Q,KAAK0Q,MAAMY,QAAQL,IAAYA,GAG9CtR,wBACS+Q,MAAMxP,eACFqP,UAAU1C,IAAMwD,EAAKxR,GAAK,EAAIG,KAAK0Q,MAAM1O,WAAoBuP,EAAU3R,GAAKyR,EAAKzR,GAAK2R,EAAU3R,EAAI2R,EAAUhM,MAAQ8L,EAAKzR,GAAK2R,EAAU1R,IAAMwR,EAAKxR,EAAIwR,EAAK7L,SAAQ,GAAK,OAC3K+K,UAAUiB,OAASH,EAAKxR,GAAKG,KAAKyQ,KAAO,EAAIzQ,KAAK0Q,MAAM1O,WAAoBuP,EAAU3R,GAAKyR,EAAKzR,GAAK2R,EAAU3R,EAAI2R,EAAUhM,MAAQ8L,EAAKzR,GAAK2R,EAAU1R,IAAMwR,EAAKxR,EAAIwR,EAAK7L,SAAQ,GAAK,OAC1L+K,UAAUkB,KAAOJ,EAAKzR,GAAK,EAAII,KAAK0Q,MAAM1O,WAAoBuP,EAAU1R,GAAKwR,EAAKxR,GAAK0R,EAAU1R,EAAI0R,EAAU/L,OAAS6L,EAAKxR,GAAK0R,EAAU3R,IAAMyR,EAAKzR,EAAIyR,EAAK9L,QAAO,GAAK,OAC5KgL,UAAUmB,MAAQL,EAAKzR,GAAKI,KAAKwQ,KAAO,EAAIxQ,KAAK0Q,MAAM1O,WAAoBuP,EAAU1R,GAAKwR,EAAKxR,GAAK0R,EAAU1R,EAAI0R,EAAU/L,OAAS6L,EAAKxR,GAAK0R,EAAU3R,IAAMyR,EAAKzR,EAAIyR,EAAK9L,QAAO,GAAK,sFDLtM5F,YAAYgS,EAAqBvE,EAAcwE,EAAsBC,QAC5DzE,IAAMA,OACNwE,aAAeA,OACfE,UAAY,QACZC,KAAgC,IAAzBvS,EAAOwS,QAAQ,EAAG,aACrBjJ,EAAI,EAAGA,EAAI4I,EAAa5I,IAAK,KAC9B+I,EAAsB,IAAIG,EAASjS,KAAK+R,KAAOhJ,EAAG/I,KAAKoN,UACtD0E,UAAU1Q,KAAK0Q,OAGDI,EAASlS,KAAK4R,cAAc,UAC1CO,iBAKbxS,aAAaL,UACFA,EAAM8S,OAAOpS,KAAK8R,WAG7BnS,gBAAgBL,SACNqS,EAAsB3R,KAAK8R,UAAUvS,cACpCD,EAAM0C,YAAcqQ,EAAQ5L,EAAGwF,GAAIjM,KAAK+R,KAAM/R,KAAK+R,KAAOJ,KAGrEhS,0CFlDuBiQ,EACvBjQ,YAAYC,EAAWC,SACbD,EAAGC,GAGNF,UAAUuK,IAEVvK,OAAO8P,KAAkCvF,wDLpBhDvK,YAAY2S,EAAgB5F,OACnB4F,QAAc,IAAI7K,MAAM,uDACxBwE,GAAKC,SACLxC,MAAQ,IAAI6I,WACZ7I,MAAM8I,IAAMF,OACZG,KAAO,IAAI1S,EAAQC,KAAK0J,MAAMnE,MAAOvF,KAAK0J,MAAMlE,aAChDkH,QAAUA,GAAW,QACrBjD,SAAWzJ,KAAK0M,QAAQjD,UAAY,OACpCE,OAAS3J,KAAK0M,QAAQ/C,QAAUxJ,OAChCoJ,MAAQvJ,KAAK0M,QAAQnD,OAASnJ,8BAK9BJ,KAAK0J,MAAMnE,QAAUvF,KAAK0J,MAAMlE,oBAC/BkE,QAA2BgJ,kBAAkB1S,KAAK0J,cACjD/B,qBAAK3H,MAAL,CAAW0J,MAAAA,4HN9Bf,CAAEnE,MAAOhD,OAAOoQ,WAAYnN,OAAQjD,OAAOqQ"}